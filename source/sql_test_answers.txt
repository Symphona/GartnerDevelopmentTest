1. Select users whose id is either 3,2 or 4
- Please return at least: all user fields

	Select * from new_schema.users where id in (3,2,4)

2. Count how many basic and premium listings each active user has
- Please return at least: first_name, last_name, basic, premium
	
	#Assumes premium = status of 2 and basic =  status of 3
	select first_name, last_name, sum((case when l.status = 2 then 1 else 0 end)) as premium, sum((case when l.status = 3 then 1 else 0 end)) as basic from new_schema.users u 
	join new_schema.listings l on l.user_id = u.id
	group by first_name

3. Show the same count as before but only if they have at least ONE premium listing
- Please return at least: first_name, last_name, basic, premium

	#Assumes premium = status of 2 and basic =  status of 3
	select first_name, last_name, sum((case when l.status = 2 then 1 else 0 end)) as premium, sum((case when l.status = 3 then 1 else 0 end)) as basic from new_schema.users u 
	join new_schema.listings l on l.user_id = u.id
	group by first_name
	having premium > 0

4. How much revenue has each active vendor made in 2013
- Please return at least: first_name, last_name, currency, revenue

	select u.first_name, u.last_name, cl.currency, sum(price) as Revenue from new_schema.clicks cl
	join new_schema.listings l on l.id = cl.listing_id
	join new_schema.users u on u.id = l.user_id
	where cl.created < '2014-01-01 00:00:00'
	group by u.first_name;

5. Insert a new click for listing id 3, at $4.00
- Find out the id of this new click. Please return at least: id

	insert into new_schema.clicks (listing_id, price, currency, created)
	values(3, 4.00, 'UNK', current_timestamp);
	select LAST_INSERT_ID();
	

6. Show listings that have not received a click in 2013
- Please return at least: listing_name

	select * from ( select listing_id, l.name, (case when min(cl.created) < '2014-01-01 00:00:00' then 1 else 0 end) as isin2013 from new_schema.clicks cl
		join new_schema.listings l on l.id = cl.listing_id
		group by listing_id) t
	where t.isin2013 = 0;


7. For each year show number of listings clicked and number of vendors who owned these listings
- Please return at least: date, total_listings_clicked, total_vendors_affected

	select YEAR(cl.created) as year, count(cl.id) as total_listings_clicked, count(Distinct(u.first_name)) as total_vendors_affected from new_schema.clicks cl
	join new_schema.listings l on l.id = cl.listing_id
	join new_schema.users u on u.id = l.user_id
	group by year

8. Return a comma separated string of listing names for all active vendors
- Please return at least: first_name, last_name, listing_names

	select first_name, last_name, GROUP_CONCAT(l.name) as listing_names from new_schema.listings l 
	join new_schema.users u on u.id = l.user_id
	group by first_name